<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    <title>Testing AJAX Upload</title>
	<!-- Firebug lite -->
	<script src='http://getfirebug.com/releases/lite/1.2/firebug-lite-compressed.js' type='text/javascript'></script>
	
    <!-- We will use version hosted by Google-->
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js" type="text/javascript"></script>
    
	<!-- Required for jQuery dialog demo-->
    <script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/jquery-ui.min.js" type="text/javascript"></script>
    <link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/jqueryui/1.7.2/themes/ui-darkness/jquery-ui.css" type="text/css" media="all" />

    <!-- AJAX Upload script itself doesn't have any dependencies-->
    <script type="text/javascript" src="../ajaxupload.js"></script>

    <style type="text/css">
        body {font-family: verdana, arial, helvetica, sans-serif; font-size: 12px;background: #373A32;color: #D0D0D0; direction: ltr;}
        h1 {color: #C7D92C;	font-size: 18px; font-weight: 400;}
        a {	color: white;}
				
		.button {
     
		}
		/* 
		We can't use ":hover" preudo-class because we have
		invisible file input above, so we have to simulate
		hover effect with JavaScript. 
		 */
		.button.hover {
			background: red;
		}
	</style>
	
	<script type="text/javascript">/*<![CDATA[*/
	$(document).ready(function(){
		$("#dialog").dialog({ autoOpen: false });
		
		$('#open_dialog').click(function(){
			$("#dialog").dialog("open");
			return false;	
		});	
		
        $('.button').each(function(){
	        new AjaxUpload(this, {
	            action: 'upload-test.php',
	            name: 'myfile',
	            data : {
	                'key1' : "This data won't be sent, we will overwrite it."
	            },
				responseType: 'json',
	            onSubmit : function(file , ext){
	                // Allow only images. You should add security check on the server-side.
	                if (ext && /^(jpg|png|jpeg|gif)$/.test(ext)){

	                    this.setData({
	                        'key1': '2 keys should be received',
							'key2': '...'
	                    });
						
                        // If you want to allow uploading only 1 file at time,
                        // you can disable upload button
                        this.disable();						
	                } else {
                    
	                    return false;               
	                }       
	            },
	            onComplete : function(file, response){
	                // enable upload button
	                this.enable();
					
					console.dir(response['files']);
					console.dir(response['post']);
	            }       
	        }); 
        });
	});/*]]>*/</script>
	</head>
<body>
	<h1>Testing AJAX Upload</h1>
	<p>
		This is a basic test, which is created to confirm that AJAX Upload works with most options.
		Back to the <a href="http://valums.com/ajax-upload/">AJAX upload</a> project page.
	</p>
	
	<p>Only images are allowed to be uploaded</p>
	
	<p><a class="button" href="#">"A" element as upload button</a></p>
	
	<div class="button" style="width:300px; height: 40px; margin: 20px 0;">
	    "DIV" element as upload button. Fixed width and height.
	</div>
	
	<p><a id="open_dialog" href="#">Button in jQuery dialog, using input[type=file]</a></p>
	<div id="dialog" style="display:none;" title="Basic dialog with Upload button">
	    <p>The Ajax Upload should work perfectly with jQuery UI dialog</p>
	    <input class="button" type="file" />
	</div>
</body>
</html>